version: '3'

services:
  plex:
    container_name: wamc_plex
    image: plexinc/pms-docker:latest
    ports:
      - 32400:32400
    environment:
      - PLEX_UID=${USER_ID}
      - PLEX_GID=${GROUP_ID}
      - ADVERTISE_IP=http://${LOCAL_STATIC_IP}:32400,https://${DOMAIN_MAIN}:${PLEX_EXT_PORT}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./data:/data
      - ./media/plex/config/:/config
      - ./media/plex/transcode/:/transcode
    devices:
      - /dev/dri:/dev/dri
    restart: always

  filebrowser:
    container_name: wamc_filebrowser
    image: filebrowser/filebrowser:v1.10.0
    restart: always
    volumes:
      - ./filebrowser/database.db:/database.db
      - ./data/:/srv
    expose:
      - 80
    command:
      - --port=80
      - --database=/database.db
      - --scope=/srv
      - --baseurl=/filebrowser
      - --no-auth
    labels:
      traefik.enable: true
      traefik.http.routers.filebrowser.entrypoints: web-secure, web-local
      traefik.http.routers.filebrowser.rule: PathPrefix(`/filebrowser`)

  transmission:
    container_name: wamc_transmission
    image: ghcr.io/linuxserver/transmission:latest
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./media/transmission/config/:/config
      - ./data/torrents:/data/torrents
    labels:
      traefik.enable: true
      traefik.http.routers.transmission.entrypoints: web-secure, web-local
      traefik.http.routers.transmission.rule: PathPrefix(`/transmission`)
    restart: always

  sonarr:
    container_name: wamc_sonarr
    image: ghcr.io/linuxserver/sonarr:latest
    labels:
      traefik.enable: true
      traefik.http.routers.sonarr.entrypoints: web-secure, web-local
      traefik.http.routers.sonarr.rule: PathPrefix(`/sonarr`)
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - ./media/sonarr/config:/config
      - ./data:/data
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
    restart: always

  bazarr:
    container_name: wamc_bazarr
    image: ghcr.io/linuxserver/bazarr:latest
    labels:
      traefik.enable: true
      traefik.http.routers.bazarr.entrypoints: web-secure, web-local
      traefik.http.routers.bazarr.rule: PathPrefix(`/bazarr`)
    volumes:
      - ./media/bazarr/config:/config
      - ./data/media:/data/media
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
    restart: always

  radarr:
    container_name: wamc_radarr
    image: ghcr.io/linuxserver/radarr:latest
    labels:
      traefik.enable: true
      traefik.http.routers.radarr.entrypoints: web-secure, web-local
      traefik.http.routers.radarr.rule: PathPrefix(`/radarr`)
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/rtc:/dev/rtc:ro
      - ./media/radarr/config:/config
      - ./data:/data
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
    restart: always

  # Proxy to a bunch of public trackers
  jackett:
    container_name: wamc_jackett
    image: ghcr.io/linuxserver/jackett:latest
    labels:
      traefik.enable: true
      traefik.http.routers.jackett.entrypoints: web-secure, web-local
      traefik.http.routers.jackett.rule: PathPrefix(`/jackett`)
    volumes:
      - ./media/jackett/config/:/config
      - ./media/transmission/downloads/:/downloads
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
    restart: always

  webdu:
    container_name: wamc_webdu
    image: lutzky/webdu
    volumes:
      - .:/data:ro
    command:
      - "--base_path=/data"
    labels:
      traefik.enable: true
      traefik.http.routers.webdu.entrypoints: web-secure, web-local
      traefik.http.routers.webdu.rule: PathPrefix(`/webdu`)
      traefik.http.routers.webdu.middlewares: webdu-stripprefix
      traefik.http.middlewares.webdu-stripprefix.stripprefix.prefixes: /webdu
    restart: always

  speedtest:
    container_name: wamc_speedtest
    image: e7db/speedtest
    ports:
      - "8082:80"
    restart: always

  static:
    container_name: wamc_static
    image: nginx
    volumes:
      - ./static/:/usr/share/nginx/html:ro
    labels:
      traefik.enable: true
      traefik.http.routers.organizr.entrypoints: web-secure, web-local
      traefik.http.routers.organizr.rule: PathPrefix(`/`)
    restart: always

  traefik:
    image: traefik:v2.2
    restart: always
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
      - "8080:8080"
    command:
      - --accesslog.filePath=/logs/access.log
      - --api.insecure=true
      - --global.sendanonymoususage=false
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web-https-redirector.address=:81
      - --entrypoints.web-https-redirector.http.redirections.entryPoint.to=web-secure
      - --entrypoints.web-https-redirector.http.redirections.entryPoint.scheme=https
      - --entrypoints.web-secure.http.middlewares=auth@docker
      - --entrypoints.web-secure.http.tls=true
      - --entrypoints.web-secure.http.tls.certResolver=acme-wamc
      - --entrypoints.web-secure.http.tls.domains[0].main=${DOMAIN_MAIN}
      - --entrypoints.web-secure.address=:443
      - --entrypoints.web-local.address=:80

      - --certificatesResolvers.acme-wamc.acme.email=lutzky@gmail.com
      - --certificatesResolvers.acme-wamc.acme.storage=/acme.json
      - --certificatesResolvers.acme-wamc.acme.httpChallenge.entryPoint=web-https-redirector
    labels:
      traefik.enable: true
      traefik.http.middlewares.auth.basicauth.usersfile: /.htpasswd
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.htpasswd:/.htpasswd
      - ./acme.json:/acme.json
      - ./traefik-logs:/logs
    container_name: traefik
